// Cynhyrchwyd y ffeil hon yn awtomatig. PEIDIWCH Ã‚ MODIWL
// This file is automatically generated. DO NOT EDIT

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import {Create as $Create} from "@wailsio/runtime";

export enum Colour {
    /**
     * The Go zero value for the underlying type of the enum.
     */
    $zero = 0,

    TextColour = 0,
    WindowBackgroundColour = 1,
    FrameBackgroundColour = 2,
    ButtonBackgroundColour = 3,
    ButtonHoverColour = 4,
    ButtonTextColour = 5,
    LabelTextColour = 6,
    EntryBackgroundColour = 7,
    EntryBorderColour = 8,
    EntryTextColour = 9,
    EntryPlaceholderColour = 10,
    ComboboxBackgroundColour = 11,
    ComboboxBorderColour = 12,
    ComboboxHoverColour = 13,
    ComboboxTextColour = 14,
    ColourCount = 15,
};

export class Payload {
    /**
     * Format
     */
    "Format": string;

    /**
     * Style
     */
    "MoonStyle": string;
    "BackgroundStyle": string;
    "BackgroundColour": string;
    "HeadingColour": string;
    "TextColour": string;

    /**
     * Observer
     */
    "Latitude": number;
    "Longitude": number;
    "Date": string;

    /**
     * View
     */
    "Type": string;
    "Orientation": string;

    /** Creates a new Payload instance. */
    constructor($$source: Partial<Payload> = {}) {
        if (!("Format" in $$source)) {
            this["Format"] = "";
        }
        if (!("MoonStyle" in $$source)) {
            this["MoonStyle"] = "";
        }
        if (!("BackgroundStyle" in $$source)) {
            this["BackgroundStyle"] = "";
        }
        if (!("BackgroundColour" in $$source)) {
            this["BackgroundColour"] = "";
        }
        if (!("HeadingColour" in $$source)) {
            this["HeadingColour"] = "";
        }
        if (!("TextColour" in $$source)) {
            this["TextColour"] = "";
        }
        if (!("Latitude" in $$source)) {
            this["Latitude"] = 0;
        }
        if (!("Longitude" in $$source)) {
            this["Longitude"] = 0;
        }
        if (!("Date" in $$source)) {
            this["Date"] = "";
        }
        if (!("Type" in $$source)) {
            this["Type"] = "";
        }
        if (!("Orientation" in $$source)) {
            this["Orientation"] = "";
        }

        Object.assign(this, $$source);
    }

    /**
     * Creates a new Payload instance from a string or object.
     */
    static createFrom($$source: any = {}): Payload {
        let $$parsedSource = typeof $$source === 'string' ? JSON.parse($$source) : $$source;
        return new Payload($$parsedSource as Partial<Payload>);
    }
}

export class RGBA {
    "Red": number;
    "Green": number;
    "Blue": number;

    /**
     * ? Awoo?
     */
    "Alpha": number;

    /** Creates a new RGBA instance. */
    constructor($$source: Partial<RGBA> = {}) {
        if (!("Red" in $$source)) {
            this["Red"] = 0;
        }
        if (!("Green" in $$source)) {
            this["Green"] = 0;
        }
        if (!("Blue" in $$source)) {
            this["Blue"] = 0;
        }
        if (!("Alpha" in $$source)) {
            this["Alpha"] = 0;
        }

        Object.assign(this, $$source);
    }

    /**
     * Creates a new RGBA instance from a string or object.
     */
    static createFrom($$source: any = {}): RGBA {
        let $$parsedSource = typeof $$source === 'string' ? JSON.parse($$source) : $$source;
        return new RGBA($$parsedSource as Partial<RGBA>);
    }
}
